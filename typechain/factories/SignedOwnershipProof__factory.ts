/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignedOwnershipProof,
  SignedOwnershipProofInterface,
} from "../SignedOwnershipProof";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nftOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenNonce",
        type: "uint256",
      },
    ],
    name: "createMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "authorizer",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nftNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IForwardRequest.ERC721ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyOwnershipProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806312ce42fd146100465780638e9a75d2146100735780639ddd61d614610096575b600080fd5b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610086610081366004610812565b610116565b604051901515815260200161006a565b6101086100a4366004610921565b6040805173ffffffffffffffffffffffffffffffffffffffff808816602083015291810186905290841660608201526080810183905260a0810182905260009060c00160405160208183030381529060405280519060200120905095945050505050565b60405190815260200161006a565b60208083015173ffffffffffffffffffffffffffffffffffffffff9081166000908152600180845260408083208151808301909252805490941681529201549282018390529142106101af5760405162461bcd60e51b815260206004820152600f60248201527f53657373696f6e2045787069726564000000000000000000000000000000000060448201526064015b60405180910390fd5b8351815173ffffffffffffffffffffffffffffffffffffffff90811691161461021a5760405162461bcd60e51b815260206004820152601560248201527f5369676e6572206e6f7420617574686f72697a6564000000000000000000000060448201526064016101a6565b60006102f36102a0866020015187610100015188606001518960a001518a608001516040805173ffffffffffffffffffffffffffffffffffffffff808816602083015291810186905290841660608201526080810183905260a0810182905260009060c00160405160208183030381529060405280519060200120905095945050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b60005490915073ffffffffffffffffffffffffffffffffffffffff166103198286610339565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b6000806000610348858561035d565b91509150610355816103cd565b509392505050565b6000808251604114156103945760208301516040840151606085015160001a610388878285856105c1565b945094505050506103c6565b8251604014156103be57602083015160408401516103b38683836106bb565b9350935050506103c6565b506000905060025b9250929050565b60008160048111156103e1576103e161096f565b14156103ea5750565b60018160048111156103fe576103fe61096f565b141561044c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101a6565b60028160048111156104605761046061096f565b14156104ae5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101a6565b60038160048111156104c2576104c261096f565b14156105365760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016101a6565b600481600481111561054a5761054a61096f565b14156105be5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016101a6565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156105f857506000905060036106b2565b8460ff16601b1415801561061057508460ff16601c14155b1561062157506000905060046106b2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610675573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff81166106ab576000600192509250506106b2565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660ff84901c601b016106f5878288856105c1565b935093505050935093915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561075657610756610703565b60405290565b803573ffffffffffffffffffffffffffffffffffffffff8116811461078057600080fd5b919050565b600082601f83011261079657600080fd5b813567ffffffffffffffff808211156107b1576107b1610703565b604051601f8301601f19908116603f011681019082821181831017156107d9576107d9610703565b816040528381528660208588010111156107f257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561082557600080fd5b823567ffffffffffffffff8082111561083d57600080fd5b90840190610140828703121561085257600080fd5b61085a610732565b6108638361075c565b81526108716020840161075c565b60208201526108826040840161075c565b60408201526108936060840161075c565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e082015261010080840135818301525061012080840135838111156108e057600080fd5b6108ec89828701610785565b82840152505080945050602085013591508082111561090a57600080fd5b5061091785828601610785565b9150509250929050565b600080600080600060a0868803121561093957600080fd5b6109428661075c565b9450602086013593506109576040870161075c565b94979396509394606081013594506080013592915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220d95721516437a44d489caf77d36112bb769b3c75301af956722086fd7f7a9e6e64736f6c63430008090033";

type SignedOwnershipProofConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignedOwnershipProofConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignedOwnershipProof__factory extends ContractFactory {
  constructor(...args: SignedOwnershipProofConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SignedOwnershipProof";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignedOwnershipProof> {
    return super.deploy(overrides || {}) as Promise<SignedOwnershipProof>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignedOwnershipProof {
    return super.attach(address) as SignedOwnershipProof;
  }
  connect(signer: Signer): SignedOwnershipProof__factory {
    return super.connect(signer) as SignedOwnershipProof__factory;
  }
  static readonly contractName: "SignedOwnershipProof";
  public readonly contractName: "SignedOwnershipProof";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedOwnershipProofInterface {
    return new utils.Interface(_abi) as SignedOwnershipProofInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedOwnershipProof {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignedOwnershipProof;
  }
}
