{
  "address": "0x6A475E8Ae8E9c22Eb83bF6Cee47AC045c2ABE481",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7e92a00a40b11bff8904c0b89a5164ca6403a2055df4abe78a39b2964b6e0e95",
  "receipt": {
    "to": null,
    "from": "0xc102f76973f4890cAB1b5d1ed26F3623381983aF",
    "contractAddress": "0x6A475E8Ae8E9c22Eb83bF6Cee47AC045c2ABE481",
    "transactionIndex": 7,
    "gasUsed": "287641",
    "logsBloom": "0x
    "blockHash": "0xedc4ac234135f5f47370ea50f8e238966fd1a874b6ed3eb3d6506822d736b2dd",
    "transactionHash": "0x7e92a00a40b11bff8904c0b89a5164ca6403a2055df4abe78a39b2964b6e0e95",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 25336513,
        "transactionHash": "0x7e92a00a40b11bff8904c0b89a5164ca6403a2055df4abe78a39b2964b6e0e95",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c102f76973f4890cab1b5d1ed26f3623381983af",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000028e051911d10000000000000000000000000000000000000000000000000000be2a00df62d798000000000000000000000000000000000000000000000835d3ab89b0f32203af00000000000000000000000000000000000000000000000000bb9bfbc6510698000000000000000000000000000000000000000000000835d3ae17b60c33d4af",
        "logIndex": 24,
        "blockHash": "0xedc4ac234135f5f47370ea50f8e238966fd1a874b6ed3eb3d6506822d736b2dd"
      }
    ],
    "blockNumber": 25336513,
    "cumulativeGasUsed": "3784443",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA6049951bBc727827439f0A136B14607A91dE178"
  ],
  "numDeployments": 5,
  "solcInputHash": "d8a240ea8153405bdc68da5ac1b17dd4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Counter.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/Counter.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\nimport \\\"./EssentialERC2771Context.sol\\\";\\n\\ncontract Counter is EssentialERC2771Context {\\n    mapping(address => uint256) public count;\\n\\n    modifier onlyForwarder() {\\n        require(isTrustedForwarder(msg.sender), \\\"Counter:429\\\");\\n        _;\\n    }\\n\\n    constructor(address trustedForwarder) EssentialERC2771Context(trustedForwarder) {}\\n\\n    function increment() external onlyForwarder {\\n        count[_msgSender()] += 1;\\n    }\\n}\\n\",\"keccak256\":\"0xc2b8801005bcf4db50fe38bd30034b9429845283500a923d20e1411955d27548\",\"license\":\"Unlicense\"},\"src/EssentialERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\nabstract contract EssentialERC2771Context is Context {\\n    address private _trustedForwarder;\\n    address public owner;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"403\\\");\\n        _;\\n    }\\n\\n    constructor(address trustedForwarder) {\\n        owner = msg.sender;\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function setTrustedForwarder(address trustedForwarder) external onlyOwner {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual override returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return super._msgSender();\\n        }\\n    }\\n\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 20];\\n        } else {\\n            return super._msgData();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2c538303cd43e2c77ddb1a29393736f881d5e5296ebd25e9824e3d65dd54e950\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161040e38038061040e83398101604081905261002f91610062565b600180546001600160a01b03199081163317909155600080546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b61036d806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100d1578063d09de08a146100fc578063da7422281461010657600080fd5b806305d85eda1461006c578063572b6c051461009f575b600080fd5b61008c61007a3660046102c8565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c16100ad3660046102c8565b6000546001600160a01b0391821691161490565b6040519015158152602001610096565b6001546100e4906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b610104610119565b005b6101046101143660046102c8565b6101d6565b6000546001600160a01b03163314610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f436f756e7465723a34323900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001600260006101a0610284565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546101cf91906102f8565b9091555050565b6001546001600160a01b0316331461024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f34303300000000000000000000000000000000000000000000000000000000006044820152606401610189565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600080546001600160a01b03163314156102c357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b6000602082840312156102da57600080fd5b81356001600160a01b03811681146102f157600080fd5b9392505050565b60008219821115610332577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea264697066735822122072cf5b7d0fc3918c32b4e37432fad861c9e14ee975722f064a7c59f0aca47f0b64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100d1578063d09de08a146100fc578063da7422281461010657600080fd5b806305d85eda1461006c578063572b6c051461009f575b600080fd5b61008c61007a3660046102c8565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c16100ad3660046102c8565b6000546001600160a01b0391821691161490565b6040519015158152602001610096565b6001546100e4906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b610104610119565b005b6101046101143660046102c8565b6101d6565b6000546001600160a01b03163314610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f436f756e7465723a34323900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001600260006101a0610284565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546101cf91906102f8565b9091555050565b6001546001600160a01b0316331461024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f34303300000000000000000000000000000000000000000000000000000000006044820152606401610189565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600080546001600160a01b03163314156102c357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b6000602082840312156102da57600080fd5b81356001600160a01b03811681146102f157600080fd5b9392505050565b60008219821115610332577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea264697066735822122072cf5b7d0fc3918c32b4e37432fad861c9e14ee975722f064a7c59f0aca47f0b64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1238,
        "contract": "src/Counter.sol:Counter",
        "label": "_trustedForwarder",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1240,
        "contract": "src/Counter.sol:Counter",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1195,
        "contract": "src/Counter.sol:Counter",
        "label": "count",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}